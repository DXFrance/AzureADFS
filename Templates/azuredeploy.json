{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "assetLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DXFrance/AzureADFS/master",
      "metadata": { "description": "This is the location in which all the linked templates are stored." }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "localAdmin",
      "metadata": {
        "description": "Username to set for the local User. Cannot be \"Administrator\", \"root\" and possibly other such common account names. "
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the local administrator account. Cannot be \"P@ssw0rd\" and possibly other such common passwords. Must be 8 characters long and three of the following complexity requirements: uppercase, lowercase, number, special character"
      }
    },
    "companyNamePrefix": {
      "type": "string",
      "metadata": { "description": "This is used to prefix the names of the resources created." }
    },
    "addcVMNameSuffix": {
      "type": "string",
      "defaultValue": "DC",
      "metadata": { "description": "The suffix of the DC: <COMPANYNAMEPREFIX> + -ADDCNAMESUFFIX + index" }
    },

    "adfsVMNameSuffix": {
      "type": "string",
      "defaultValue": "adfs",
      "metadata": { "description": "Suffix to use for ADFS VM name" }
    },
    "wapVMNameSuffix": {
      "type": "string",
      "defaultValue": "wap",
      "metadata": {
        "description": "Suffix to use for WAP VM Name"
      }
    },
    "vmInstancesNumber": {
      "type": "int",
      "defaultValue": 2,
      "metadata": { "description": "The number of ADFS and WAP VMs to build" }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "Select a VM SKU"
      }
    },
    "nicSuffix": {
      "type": "string",
      "metadata": { "description": "This is the name of the Network interfaces." },
      "defaultValue": "NIC"
    },
    "adPDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the PDC"
      },
      "defaultValue": "10.0.1.4"
    },
    "adBDCNICIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the BDC"
      },
      "defaultValue": "10.0.1.5"
    },
    "ilbIP": {
      "type": "string",
      "defaultValue": "10.0.2.10",
      "metadata": { "description": "The IP used for the ADFS Load Balancer (Internal)" }
    },
    "onPremDNSIP": {
      "type": "string",
      "metadata": { "description": "The address of a domain controller on-premises" },
      "defaultValue": "192.168.32.10"
    },
    "localAddressPRefix": {
      "metadata": {
        "description": "Address Prefix of the on-premises network"
      },
      "defaultValue": [ "192.168.0.0/16" ],
      "type": "array"
    },
    "localGatewayIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP Address of the on-premises VPN Appliance"
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new virtual network in CIDR format"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "adSubnetAddressRange": {
      "type": "string",
      "metadata": { "description": "The address range of the desired subnet for Active Directory." },
      "defaultValue": "10.0.1.0/25"
    },
    "gatewaySubnetAddressRange": {
      "type": "string",
      "defaultValue": "10.0.4.248/29",
      "metadata": {
        "description": "Address space used by the VPN Gateway. It must be larger than a /29; it is recommended to keep it at /29 as you can't deploy into it"
      }
    },
    "adfsSubnetAddressRange": {
      "type": "string",
      "metadata": { "description": "The address range of the desired subnet for the ADFS Servers." },
      "defaultValue": "10.0.2.0/24"
    },
    "dmzSubnetAddressRange": {
      "type": "string",
      "metadata": { "description": "The address range of the desired subnet for the DMZ." },
      "defaultValue": "10.0.3.0/24"
    },
    "localGatewayName": {
      "type": "string",
      "defaultValue": "On-Prem-VPN",
      "metadata": {
        "description": "Arbitrary name for the gateway representing the on-premises network"
      }
    },
    "sharedKey": {
      "type": "string",
      "metadata": {
        "description": "Arbitrary Shared key (PSK) for IPSec tunnel"
      },
      "defaultValue": "YouShouldGenerateANewKey"
    }
  },
  "variables": {
    "adpdcTemplateURI": "[concat(parameters('assetLocation'),'/Templates/adpdcdeploy.json')]",
    "adbdcTemplateURI": "[concat(parameters('assetLocation'),'/Templates/adbdcdeploy.json')]",
    "adfsTemplateURI": "[concat(parameters('assetLocation'),'/Templates/adfsdeploy.json')]",
    "wapTemplateURI": "[concat(parameters('assetLocation'),'/Templates/wapdeploy.json')]",
    "adAvailabilitySetName": "[toupper(concat(parameters('companyNamePrefix'), '-AD-AS'))]",
    "adfsAvailabilitySetName": "[toupper(concat(parameters('companyNamePrefix'), '-ADFS-AS'))]",
    "wapAvailabilitySetName": "[toupper(concat(parameters('companyNamePrefix'), '-WAP-AS'))]",
    "adfsLoadBalancerID": "[resourceId('Microsoft.Network/loadBalancers',variables('adfsLoadBalancerName'))]",
    "domainName": "[toupper(parameters('companyNamePrefix'))]",
    "fullyQualifiedDomainName": "[tolower(concat(variables('domainName'), '.cloud'))]",
    "adfsVMName": "[toupper(concat(parameters('companyNamePrefix'), '-', parameters('adfsVMNameSuffix')))]",
    "addcVMName": "[toupper(concat(parameters('companyNamePrefix'), '-', parameters('addcVMNameSuffix')))]",
    "wapVMName": "[toupper(concat(parameters('companyNamePrefix'), '-', parameters('wapVMNameSuffix')))]",
    "addcNicPrefix": "[variables('addcVMName')]",
    "adfsNicPrefix": "[variables('adfsVMName')]",
    "wapNicPrefix": "[variables('wapVMName')]",
    "gatewaySubnetName": "gatewaySubnet",
    "imageOffer": "WindowsServer",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageSKU": "2012-R2-Datacenter",
    "adRdpIPAddressName": "[concat(variables('addcVMName'),'-RDP')]",
    "adfsRdpIPAddressName": "[concat(variables('adfsVMName'),'-RDP')]",
    "wapRdpIPAddressName": "[concat(variables('wapVMName'),'-RDP')]",
    "wapPIPAddressName": "[concat(variables('wapVMName'),'-PIP')]",
    "connectionName": "[tolower(concat(parameters('companyNamePrefix'),'-VPN'))]",
    "diagnosticStorageAccountName": "[replace(replace(tolower(concat(parameters('companyNamePrefix'), uniquestring(resourceGroup().id))), '-',''),'.','')]",
    "storageAccountType": "Standard_LRS",
    "vnetName": "[toupper(concat(parameters('companyNamePrefix'),'-VNET'))]",
    "adfsSubnetName": "adfsSubnet",
    "adSubnetName": "adSubnet",
    "wapSubnetName": "dmzSubnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "adSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('adSubnetName'))]",
    "adfsSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('adfsSubnetName'))]",
    "wapSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('wapSubnetName'))]",
    "subnets": [
      {
        "name": "[variables('adSubnetName')]",
        "properties": {
          "addressprefix": "[parameters('adSubnetAddressRange')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNSGName'))]"
          }

        }
      },
      {
        "name": "[variables('adfsSubnetName')]",
        "properties": {
          "addressprefix": "[parameters('adfsSubnetAddressRange')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adfsNSGName'))]"
          }
        }
      },
      {
        "name": "[variables('wapSubnetName')]",
        "properties": {
          "addressprefix": "[parameters('dmzSubnetAddressRange')]",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('wapNSGName'))]"
          }
        }
      },
      {
        "name": "[variables('gatewaySubnetName')]",
        "properties": {
          "addressprefix": "[parameters('gatewaySubnetAddressRange')]"
        }
      }
    ],
    "vnetTemplateURI": "[concat(parameters('assetLocation'),'/Templates/vnetdeploy.json')]",
    "vnetDNSTemplateURI": "[concat(parameters('assetLocation'),'/Templates/vnetdnsdeploy.json')]",
    "vpnTemplateURI": "[concat(parameters('assetLocation'),'/Templates/vpndeploy.json')]",
    "wapLoadBalancerID": "[resourceId('Microsoft.Network/loadBalancers',variables('wapLoadBalancerName'))]",
    "adfsLoadBalancerName": "[concat(variables('adfsVMName'),'-LB')]",
    "wapLoadBalancerName": "[concat(variables('adfsVMName'),'-LB')]",
    "adfsNSGName": "[concat(variables('adfsVMName'),'-NSG')]",
    "adNSGName": "[concat(variables('addcVMName'),'-NSG')]",
    "wapNSGName": "[concat(variables('wapVMName'),'-NSG')]",
    "gatewayPublicIPName": "[tolower(concat(parameters('companyNamePrefix'),'-localVPN'))]",
    "storageApiVersion": "2015-06-15",
    "nestedVirtualMachineApiVersion": "2016-09-01",
    "networkApiVersion": "2017-03-01",
    "computeApiVersion": "2017-03-30"
  },
  "resources": [
    {
      "apiVersion": "[variables('storageApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[tolower(variables('diagnosticStorageAccountName'))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DiagnosticStorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('computeApiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('adAvailabilitySetName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      },
      "tags": {
        "displayName": "AdAvailabilitySet"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "name": "VNet",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vnetTemplateURI')]" },
        "parameters": {
          "vnetName": { "value": "[ variables('vnetName') ]" },
          "subnets": { "value": "[ variables('subnets') ]" },
          "virtualNetworkAddressRange": { "value": "[parameters('virtualNetworkAddressRange')]" },
          "onPremDNSIP": { "value": "[parameters('onPremDNSIP')]" },
          "ilbIP": { "value": "[parameters('ilbIP')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('wapPIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "wapPIPAddressName" },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('wapPIPAddressName')]"
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('wapRdpIPAddressName'),copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmInstancesNumber')]"
      },
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "wapRdpIPAddressName" },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('wapRdpIPAddressName'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('adRdpIPAddressName'),copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmInstancesNumber')]"
      },
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "adRdpIPAddressName" },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('adRdpIPAddressName'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('adfsRdpIPAddressName'),copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmInstancesNumber')]"
      },
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "adfsRdpIPAddressName" },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('adfsRdpIPAddressName'),copyindex())]"
        }
      }
    },

    {
      "apiVersion": "[variables('nestedVirtualMachineApiVersion')]",
      "name": "AdPdcVM",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('adAvailabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "Microsoft.Resources/deployments/VNet",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('adRdpIPAddressName'), 0)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('adpdcTemplateURI')]" },
        "parameters": {
          "adAvailabilitySetId": { "value": "[resourceId('Microsoft.Compute/availabilitySets',variables('adAvailabilitySetName'))]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adVMName": { "value": "[variables('addcVMName')]" },
          "fullyQualifiedDomainName": { "value": "[variables('fullyQualifiedDomainName')]" },
          "assetlocation": { "value": "[parameters('assetLocation')]" },
          "nicSuffix": { "value": "[parameters('nicSuffix')]" },
          "nicPrefix": { "value": "[variables('addcNicPrefix')]" },
          "diagnosticStorageAccountName": { "value": "[variables('diagnosticStorageAccountName')]" },
          "vnetName": { "value": "[ variables('vnetName') ]" },
          "adPDCNICIPAddress": { "value": "[parameters('adPDCNICIPAddress')]" },
          "adRdpIPAddressName": { "value": "[variables('adRdpIPAddressName')]" },
          "vmSize": { "value": "[parameters('vmSize')]" }
        }
      }
    },
      {
        "apiVersion": "[variables('networkApiVersion')]",
        "name": "VNetDNSServerWithPDC",
        "type": "Microsoft.Resources/deployments",
        "dependsOn": [
          "Microsoft.Resources/deployments/AdPdcVM"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": { "uri": "[variables('vnetDNSTemplateURI')]" },
          "parameters": {
            "vnetName": { "value": "[ variables('vnetName') ]" },
            "subnets": { "value": "[ variables('subnets') ]" },
            "virtualNetworkAddressRange": { "value": "[parameters('virtualNetworkAddressRange')]" },
            "onPremDNSIP": { "value": "[parameters('onPremDNSIP')]" },
            "ilbIP": { "value": "[parameters('ilbIP')]" },
            "dcPrivateIPsforDNS": {
              "value": [
                "[parameters('adPDCNICIPAddress')]"
              ]
            }
          }
        }
      },
    {
      "apiVersion": "[variables('nestedVirtualMachineApiVersion')]",
      "name": "AdBdcVM",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('adAvailabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('adRdpIPAddressName'), 1)]",
        "Microsoft.Resources/deployments/VNetDNSServerWithPDC"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('adbdcTemplateURI')]" },
        "parameters": {
          "adAvailabilitySetId": { "value": "[resourceId('Microsoft.Compute/availabilitySets',variables('adAvailabilitySetName'))]" },
          "dcPrivateIPsforDNS": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "fullyQualifiedDomainName": { "value": "[variables('fullyQualifiedDomainName')]" },
          "adVMName": { "value": "[variables('addcVMName')]" },
          "assetlocation": { "value": "[parameters('assetLocation')]" },
          "nicSuffix": { "value": "[parameters('nicSuffix')]" },
          "nicPrefix": { "value": "[variables('addcNicPrefix')]" },
          "diagnosticStorageAccountName": { "value": "[variables('diagnosticStorageAccountName')]" },
          "vnetName": { "value": "[ variables('vnetName') ]" },
          "adRdpIPAddressName": { "value": "[variables('adRdpIPAddressName')]" },
          "vmSize": { "value": "[parameters('vmSize')]" }
        }
      }
    },
    {
      "apiVersion": "[variables('networkApiVersion')]",
      "name": "VNetDNSServerWithBDC",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "Microsoft.Resources/deployments/AdBdcVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('vnetDNSTemplateURI')]" },
        "parameters": {
          "vnetName": { "value": "[ variables('vnetName') ]" },
          "subnets": { "value": "[ variables('subnets') ]" },
          "virtualNetworkAddressRange": { "value": "[parameters('virtualNetworkAddressRange')]" },
          "onPremDNSIP": { "value": "[parameters('onPremDNSIP')]" },
          "ilbIP": { "value": "[parameters('ilbIP')]" },
          "dcPrivateIPsforDNS": {
            "value": [
              "[parameters('adPDCNICIPAddress')]",
              "[parameters('adBDCNICIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "adfsVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "Microsoft.Resources/deployments/VNetDNSServerWithBDC",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('adfsRdpIPAddressName'), 0)]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('adfsRdpIPAddressName'), 1)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('adfsTemplateURI')]" },
        "parameters": {
          "adfsAvailabilitySetName": { "value": "[variables('adfsAvailabilitySetName')]" },
          "adfsLoadBalancerName": { "value": "[variables('adfsLoadBalancerName')]" },
          "adfsNSGName": { "value": "[variables('adfsNSGName')]" },
          "adfsRdpIPAddressName": { "value": "[variables('adfsRdpIPAddressName')]" },
          "adfsSubnetName": { "value": "[variables('adfsSubnetName')]" },
          "adfsVMName": { "value": "[variables('adfsVMName')]" },
          "domainName": { "value": "[variables('domainName')]" },
          "fullyQualifiedDomainName": { "value": "[variables('fullyQualifiedDomainName')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "assetlocation": { "value": "[parameters('assetLocation')]" },
          "ilbIP": { "value": "[parameters('ilbIP')]" },
          "nicSuffix": { "value": "[parameters('nicSuffix')]" },
          "nicPrefix": { "value": "[variables('adfsNicPrefix')]" },
          "diagnosticStorageAccountName": { "value": "[variables('diagnosticStorageAccountName')]" },
          "vmInstancesNumber": { "value": 1 },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "vnetName": { "value": "[ variables('vnetName') ]" }
        }
      }
    },
    {
      "name": "wapVMs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "Microsoft.Resources/deployments/adfsVMs",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('wapPIPAddressName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('wapRdpIPAddressName'), 0)]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('wapRdpIPAddressName'), 1)]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('wapTemplateURI')]" },
        "parameters": {
          "wapAvailabilitySetName": { "value": "[variables('wapAvailabilitySetName')]" },
          "wapLoadBalancerName": { "value": "[variables('wapLoadBalancerName')]" },
          "wapSubnetName": { "value": "[variables('wapSubnetName')]" },
          "wapNSGName": { "value": "[variables('wapNSGName')]" },
          "wapPIPAddressName": { "value": "[variables('wapPIPAddressName')]" },
          "wapRdpIPAddressName": { "value": "[variables('wapRdpIPAddressName')]" },
          "wapVMName": { "value": "[variables('wapVMName')]" },
          "fullyQualifiedDomainName": { "value": "[variables('fullyQualifiedDomainName')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "assetlocation": { "value": "[parameters('assetLocation')]" },
          "ilbIP": { "value": "[parameters('ilbIP')]" },
          "nicSuffix": { "value": "[parameters('nicSuffix')]" },
          "nicPrefix": { "value": "[variables('wapNicPrefix')]" },
          "diagnosticStorageAccountName": { "value": "[variables('diagnosticStorageAccountName')]" },
          "vmInstancesNumber": { "value": "[parameters('vmInstancesNumber')]" },
          "vmSize": { "value": "[parameters('vmSize')]" },
          "vnetName": { "value": "[ variables('vnetName') ]" }
        }
      }
    }

  ]
}
